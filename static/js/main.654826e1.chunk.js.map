{"version":3,"sources":["WordCard.tsx","MediaCard.tsx","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","WordCard","classes","React","useState","fix","setFix","Card","className","raised","CardHeader","action","IconButton","onClick","CardContent","Typography","variant","component","Box","display","flexDirection","justifyContent","pb","useMediaStyles","card","maxWidth","zIndex","media","height","profileBox","bottom","spacing","right","profileText","textAlign","paddingRight","color","MediaCard","props","imageUrl","name","CardActionArea","CardMedia","style","backgroundPositionY","image","title","gutterBottom","flexGrow","menuButton","marginRight","toolbar","mixins","content","paddingTop","exheading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","exSecondaryHeading","palette","text","secondary","extendedIcon","Transition","forwardRef","ref","Slide","direction","qaList","question","choices","nextQA","createDummyRoughSummary","_","shuffle","App","dialogOpen","setDialogOpen","nextDialogOpen","setNextDialogOpen","qaIndex","setQAIndex","selectedQAList","setSelectedQAList","handleDialogClose","handleNextDialogClose","Array","map","data","setData","qa","AppBar","position","Toolbar","edge","aria-label","Button","Container","Dialog","fullWidth","open","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","Grid","container","justify","alignItems","c","i","selected","is2of2","length","item","xs","sqa","concat","DialogActions","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","j","index","Divider","ExpansionPanelActions","size","filter","mb","Fab","my","d","key","sm","md","createMuiTheme","primary","blue","pink","error","main","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.654826e1.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  })\n);\n\nexport default function WordCard() {\n  const classes = useStyles();\n  const [fix, setFix] = React.useState(false);\n\n  const handleClick = () => setFix(!fix);\n\n  return (\n    <Card className={classes.root} raised={!fix}>\n      <CardHeader\n        action={\n          <IconButton onClick={handleClick}>\n            {fix ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\n          </IconButton>\n        }\n      />\n      <CardContent>\n        <Typography variant=\"h2\" component=\"p\">\n          ランダムワード\n        </Typography>\n      </CardContent>\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" pb={1}>\n        <IconButton>\n          <AutorenewIcon />\n        </IconButton>\n      </Box>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\nconst useMediaStyles = makeStyles((theme: Theme) => ({\n  card: {\n    maxWidth: 300,\n    zIndex: 1000,\n  },\n  media: {\n    height: 200,\n  },\n  profileBox: {\n    bottom: theme.spacing(2),\n    right: -theme.spacing(2),\n    width: `calc(100% + ${theme.spacing(4)}px)`,\n    height: theme.spacing(3.4),\n    backgroundColor: '#0009'\n  },\n  profileText: {\n    textAlign: 'right',\n    paddingRight: theme.spacing(2),\n    color: 'white'\n  }\n}));\n\ninterface MediaCardProps { \n  imageUrl: string;\n  name: string;\n}\n\nexport default function MediaCard(props: MediaCardProps) {\n  const { imageUrl, name　} = props;\n  const classes = useMediaStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          style={{ backgroundPositionY: '0%' }}\n          image={imageUrl}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"row\">\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Box flexGrow={1} />\n          </Box>\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n  makeStyles,\n  createStyles,\n  Theme,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Button,\n  Dialog,\n  DialogTitle,\n  Slide,\n  DialogContent,\n  DialogActions,\n  Box,\n  Grid,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Container,\n  Divider,\n  ExpansionPanelActions,\n  Fab,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\nimport WordCard from \"./WordCard\";\nimport MediaCard from \"./MediaCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      paddingTop: theme.spacing(3),\n    },\n    exheading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    exSecondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype QA = {\n  question: string;\n  choices: string[];\n};\n\ntype SelectedQA = QA & { selected: number };\n\nconst qaList: QA[] = [\n  {\n    question: \"新しいことをはじめたい気分ですか？\",\n    choices: [\"はい\", \"いいえ\"],\n  },\n  {\n    question: \"次のものをアレンジするのはどうでしょう？\",\n    choices: [\n      \"筋トレ\",\n      \"季節のコーデ\",\n      \"シューズペインティング\",\n      \"ファッションお悩み相談\",\n    ],\n  },\n];\n\nconst nextQA: QA = {\n  question: \"これは追加の質問です。（選択しても反応しません。）\",\n  choices: [\"はい\", \"いいえ\"],\n};\n\nfunction createDummyRoughSummary() {\n  const imageTypes = [\n    \"nature\",\n    \"water\",\n    \"toy\",\n    \"book\",\n    \"sun\",\n    \"snow\",\n    \"tree\",\n    \"forest\",\n    \"coffee\",\n    \"house\",\n    \"lake\",\n  ];\n\n  return {\n    imageUrl:\n      \"https://source.unsplash.com/400x300/?\" + _.shuffle(imageTypes)[0],\n    name: \"Something special♡\",\n  };\n}\n\ntype MediaData = {\n  imageUrl: string;\n  name: string;\n};\n\nexport default function App() {\n  const classes = useStyles();\n  const [dialogOpen, setDialogOpen] = useState(true);\n  const [nextDialogOpen, setNextDialogOpen] = useState(false);\n  const [qaIndex, setQAIndex] = useState(0);\n\n  const [selectedQAList, setSelectedQAList] = useState<SelectedQA[]>([]);\n\n  const handleDialogClose = () => setDialogOpen(false);\n  const handleNextDialogClose = () => setNextDialogOpen(false);\n  const handleSelect = (selected: number) => () => {\n    const sqa: SelectedQA = { ...qaList[qaIndex], selected };\n    setSelectedQAList(selectedQAList.concat([sqa]));\n\n    if (qaIndex !== qaList.length - 1) {\n      setQAIndex(qaIndex + 1);\n    } else {\n      setDialogOpen(false);\n    }\n  };\n  const handleReSelect = (index: number, selected: number) => () => {\n    setSelectedQAList(\n      selectedQAList.map((sqa, i) => (i === index ? { ...sqa, selected } : sqa))\n    );\n  };\n  const handleDeleteSelection = (index: number) => () => {\n    setSelectedQAList(selectedQAList.filter((_, i) => i !== index));\n  };\n  const [data, setData] = useState([...Array(10)].map(() => createDummyRoughSummary()));\n  const handleResetData = () => setData([...Array(10)].map(() => createDummyRoughSummary()));\n\n  const qa = qaList[qaIndex];\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            DX Tools\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n\n      <main className={classes.content}>\n        <Container maxWidth=\"md\">\n          <Dialog\n            fullWidth\n            maxWidth=\"md\"\n            open={dialogOpen}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleDialogClose}\n          >\n            <DialogTitle>{qa.question}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"space-around\"\n                alignItems=\"center\"\n                spacing={3}\n              >\n                {qa.choices.map((c, i) => {\n                  const is2of2 = qa.choices.length === 2 && i + 1 === 2;\n                  return (\n                    <Grid item xs={3}>\n                      <Button\n                        variant=\"contained\"\n                        color={is2of2 ? \"secondary\" : \"primary\"}\n                        fullWidth\n                        onClick={handleSelect(i)}\n                      >\n                        {c}\n                      </Button>\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleDialogClose} color=\"primary\">\n                質問をスキップ\n              </Button>\n              <Button onClick={handleDialogClose} color=\"primary\">\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Dialog\n            fullWidth\n            maxWidth=\"md\"\n            open={nextDialogOpen}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleNextDialogClose}\n          >\n            <DialogTitle>{nextQA.question}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"space-around\"\n                alignItems=\"center\"\n                spacing={3}\n              >\n                {nextQA.choices.map((c, i) => {\n                  const is2of2 = qa.choices.length === 2 && i + 1 === 2;\n                  return (\n                    <Grid item xs={3}>\n                      <Button\n                        variant=\"contained\"\n                        color={is2of2 ? \"secondary\" : \"primary\"}\n                        fullWidth\n                      >\n                        {c}\n                      </Button>\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleNextDialogClose} color=\"primary\">\n                質問をスキップ\n              </Button>\n              <Button onClick={handleNextDialogClose} color=\"primary\">\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {selectedQAList.length !== 0 && (\n            <Box pb={3}>\n              {selectedQAList.map((sqa, i) => (\n                <ExpansionPanel>\n                  <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Box flexGrow={1}>\n                      <Typography className={classes.exheading}>\n                        {sqa.question}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography className={classes.exSecondaryHeading}>\n                        {sqa.choices[sqa.selected]}\n                      </Typography>\n                    </Box>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"space-around\"\n                      alignItems=\"center\"\n                    >\n                      {sqa.choices.map((c, j) => {\n                        const is2of2 = sqa.choices.length === 2 && i + 1 === 2;\n                        return (\n                          <Grid item>\n                            <Button\n                              variant={\n                                sqa.selected === j ? \"contained\" : \"text\"\n                              }\n                              color={is2of2 ? \"secondary\" : \"primary\"}\n                              onClick={handleReSelect(i, j)}\n                            >\n                              {c}\n                            </Button>\n                          </Grid>\n                        );\n                      })}\n                    </Grid>\n                  </ExpansionPanelDetails>\n                  <Divider />\n                  <ExpansionPanelActions>\n                    <Button size=\"small\" onClick={handleDeleteSelection(i)}>\n                      この質問を削除\n                    </Button>\n                  </ExpansionPanelActions>\n                </ExpansionPanel>\n              ))}\n            </Box>\n          )}\n\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"center\"\n            mb={3}\n          >\n            <Fab variant=\"extended\" onClick={() => setNextDialogOpen(true)}>\n              <AddIcon className={classes.extendedIcon} />\n              質問を追加\n            </Fab>\n          </Box>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            {[0, 1, 2].map(() => (\n              <Grid item xs={4}>\n                <WordCard />\n              </Grid>\n            ))}\n          </Grid>\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"center\"\n            my={3}\n          >\n            <Fab variant=\"extended\" onClick={handleResetData}>\n              <AutorenewIcon className={classes.extendedIcon} />\n              キーワードをリフレッシュ\n            </Fab>\n          </Box>\n\n          <Grid container justify=\"center\" spacing={3}>\n            {data.map((d, key) => {\n                return (\n                  <Grid key={key} item xs={12} sm={6} md={4}>\n                    <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\n                      <MediaCard {...d} />\n                    </Box>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink } from '@material-ui/core/colors';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}